#@author:- Neeraj Shandilya & Francesco Bersani
#@version:- 3.0
#@instruction:- Goto HMC >> System >> Tools >> Export upload this file and then save and run the job
# before running this script update value of $lang=en to the target language and also update the name of
# containt catalog to tagret catalog for list of pages either ask cms team or get quesry from  how_to_import_cms_containt file
# once the job is successfull download the zip and then read how_to_import_cms_containt file for further instruction
$contentCatalog=distrelec_NLContentCatalog
$contentCV=catalogVersion(catalog(id[default=$contentCatalog]),version[default='Staged'])
$lang=nl
"#%
impex.setLocale(new Locale(""en"",""DE""));
java.lang.String catalogVersion = ""distrelec_NLContentCatalog"";

java.lang.String pages = ""'catalogOrderPage','feedback','NewsletterConfirmationPage','NewsletterRegisterPage','NewsletterSuccessPage','optOutInformationPage','page_0000099D','page_0000099E','page_0000099F','page_0000099G','page_0000099J','page_0000099K','page_0000099M','page_0000099N','page_0000099P','page_0000099Q','page_0000099R','page_0000099S','page_0000099U','page_0000099V','page_0000099Y','page_0000099Z','page_000009A0','page_000009A1','page_000009A3','page_000009A4','page_000009A5','page_000009A6','page_000009A7','page_000009A9','page_00000A14','page_00000BLZ','page_0000144J','page_0000144K','searchEmpty','searchFeedbackSent'""
"
#1.----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""SimpleBannerComponent_Media.csv"" );"
INSERT_UPDATE Media;mediaFormat(qualifier);code[unique=true];mime[default='image/jpg'];$contentCV[unique=true];realfilename
"#% impex.exportItemsFlexibleSearch(""select distinct {paragraph:media}	from {SimpleBannerComponent  as paragraph} where {paragraph:pk} in 	({{select {efs:target} from {ElementsForSlot as efs} where {efs:source} in 	({{SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }}) }}) }})"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"


"#% impex.setTargetFile( ""DistLinkedImageTextComponent_Media.csv"" );"
INSERT_UPDATE Media;mediaFormat(qualifier);code[unique=true];mime[default='image/jpg'];$contentCV[unique=true];realfilename
"#% impex.exportItemsFlexibleSearch(""select distinct {paragraph:media}	from {DistLinkedImageTextComponent  as paragraph} where {paragraph:pk} in 	({{select {efs:target} from {ElementsForSlot as efs} where {efs:source} in 	({{SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }}) }}) }})"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"

#2.----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""ContentPage.csv"", true, 1, -1 );"

INSERT_UPDATE ContentPage;&Item;$contentCV[unique=true];uid[unique=true];name;title[lang=en];title[lang=$lang];masterTemplate(uid,$contentCV);label;defaultPage[default='true'];approvalStatus(code)[default='approved'];homepage[default='false'];
"#% impex.exportItemsFlexibleSearch(""SELECT {page:pk} FROM {ContentPage as page join CatalogVersion as cv on {page:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"

#verify that CmsComponentWidth is present

#3a.----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""CMSParagraphComponent.csv"" );"
insert_update CMSParagraphComponent;&Item;catalogVersion(catalog(id),version)[unique=true,allownull=true];containers(catalogVersion(catalog(id),version),uid);content[lang=en];content[lang=$lang];name;onlyOneRestrictionMustApply[allownull=true];restrictions(catalogVersion(catalog(id),version),uid);uid[unique=true,allownull=true];visible[allownull=true]
"#% impex.exportItemsFlexibleSearch(""select {paragraph:pk}	from {CMSParagraphComponent  as paragraph} where {paragraph:pk} in 	({{select {efs:target} from {ElementsForSlot as efs} where {efs:source} in 	({{SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }}) }}) }})"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"

#3b.----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""DistHeadlineComponent.csv"" );"
insert_update DistHeadlineComponent;&Item;catalogVersion(catalog(id),version)[unique=true,allownull=true];containers(catalogVersion(catalog(id),version),uid);headline[lang=en];headline[lang=$lang];name;onlyOneRestrictionMustApply[allownull=true];restrictions(catalogVersion(catalog(id),version),uid);uid[unique=true,allownull=true];visible[allownull=true]
"#% impex.exportItemsFlexibleSearch(""select {paragraph:pk}	from {DistHeadlineComponent  as paragraph} where {paragraph:pk} in 	({{select {efs:target} from {ElementsForSlot as efs} where {efs:source} in 	({{SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }}) }}) }})"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"

#3c.----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""DistLeadTextComponent.csv"" );"
insert_update DistLeadTextComponent;&Item;catalogVersion(catalog(id),version)[unique=true,allownull=true];componentWidth(code,itemtype(code));containers(catalogVersion(catalog(id),version),uid);leadText[lang=en];leadText[lang=$lang];leadTitle[lang=en];leadTitle[lang=$lang];name;onlyOneRestrictionMustApply[allownull=true];restrictions(catalogVersion(catalog(id),version),uid);uid[unique=true,allownull=true];visible[allownull=true]
"#% impex.exportItemsFlexibleSearch(""select {paragraph:pk}	from {DistLeadTextComponent  as paragraph} where {paragraph:pk} in 	({{select {efs:target} from {ElementsForSlot as efs} where {efs:source} in 	({{SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }}) }}) }})"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"

#3d.----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""DistOptOutSuccessComponent.csv"" );"
insert_update DistOptOutSuccessComponent;&Item;catalogVersion(catalog(id),version)[unique=true,allownull=true];containers(catalogVersion(catalog(id),version),uid);name;onlyOneRestrictionMustApply[allownull=true];restrictions(catalogVersion(catalog(id),version),uid);uid[unique=true,allownull=true];visible[allownull=true]
"#% impex.exportItemsFlexibleSearch(""select {paragraph:pk}	from {DistOptOutSuccessComponent  as paragraph} where {paragraph:pk} in 	({{select {efs:target} from {ElementsForSlot as efs} where {efs:source} in 	({{SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }}) }}) }})"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"

#3e.----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""SimpleBannerComponent.csv"" );"
insert_update SimpleBannerComponent;&Item;catalogVersion(catalog(id),version)[unique=true,allownull=true];containers(catalogVersion(catalog(id),version),uid);external[allownull=true];localizedUrlLink[lang=en];localizedUrlLink[lang=$lang];media(catalogVersion(catalog(id),version),code)[lang=en];name;onlyOneRestrictionMustApply[allownull=true];restrictions(catalogVersion(catalog(id),version),uid);uid[unique=true,allownull=true];urlLink;visible[allownull=true];wtOnSiteLinkId
"#% impex.exportItemsFlexibleSearch(""select {paragraph:pk}	from {SimpleBannerComponent  as paragraph} where {paragraph:pk} in 	({{select {efs:target} from {ElementsForSlot as efs} where {efs:source} in 	({{SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }}) }}) }})"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"

#3f.----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""DistIframeComponent.csv"" );"
insert_update DistIframeComponent;&Item;catalogVersion(catalog(id),version)[unique=true,allownull=true];height;linkToIframe[lang=en];linkToIframe[lang=$lang];name;onlyOneRestrictionMustApply[allownull=true];parameterEncoding;title[lang=en];title[lang=$lang];uid[unique=true,allownull=true];visible[allownull=true];width
"#% impex.exportItemsFlexibleSearch(""select {paragraph:pk}	from {DistIframeComponent  as paragraph} where {paragraph:pk} in 	({{select {efs:target} from {ElementsForSlot as efs} where {efs:source} in 	({{SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }}) }}) }})"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"

#3g.----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""DistLinkedImageTextComponent.csv"" );"
insert_update DistLinkedImageTextComponent;&Item;caption[lang=en];caption[lang=$lang];catalogVersion(catalog(id),version)[unique=true,allownull=true];componentWidth(code,itemtype(code));contentText[lang=en];contentText[lang=$lang];external[allownull=true];imageWidth(code,itemtype(code));localizedUrlLink[lang=en];localizedUrlLink[lang=$lang];media(catalogVersion(catalog(id),version),code)[lang=en];name;onlyOneRestrictionMustApply[allownull=true];page(catalogVersion(catalog(id),version),uid);uid[unique=true,allownull=true];urlLink;visible[allownull=true]
"#% impex.exportItemsFlexibleSearch(""select {paragraph:pk}	from {DistLinkedImageTextComponent  as paragraph} where {paragraph:pk} in 	({{select {efs:target} from {ElementsForSlot as efs} where {efs:source} in 	({{SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }}) }}) }})"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"

#3h.1 ----------------------------------------------------------------------------------------------------
"#% public static String[] getCMSLinkComponents() {

            java.lang.String query = ""select {paragraph:pk}  from {DistLinkListComponent  as paragraph} where {paragraph:pk} in   ({{select {efs:target} from {ElementsForSlot as efs} where {efs:source} in   ({{SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }}) }}) }})"";
                
            flexibleSearchService = com.namics.hybris.toolbox.spring.SpringUtil.getBean(""flexibleSearchService"");
                
            java.util.List linkComponents = new java.util.ArrayList();


            searchResult = flexibleSearchService.search(query);

            components = searchResult.getResult();

            if(org.apache.commons.collections.CollectionUtils.isNotEmpty(components)){ 
             for(component: components){
                 for(link: component.linkComponents){
					linkComponents.add(link.getPk().toString());
                 }
            }
            }

            return linkComponents.toArray(new String[linkComponents.size()]);
            //return linkComponents;
}

"
#3h.1 ----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""CMSLinkComponent.csv"", true, 1, -1 );"
INSERT_UPDATE CMSLinkComponent;$contentCV[unique=true];uid[unique=true];name
"#% impex.exportItems(getCMSLinkComponents());"

#3h.2----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""DistLinkListComponent.csv"" );"
insert_update DistLinkListComponent;&Item;catalogVersion(catalog(id),version)[unique=true,allownull=true];linkComponents(catalogVersion(catalog(id),version),uid);name;onlyOneRestrictionMustApply[allownull=true];title[lang=en];title[lang=$lang];uid[unique=true,allownull=true];visible[allownull=true]
"#% impex.exportItemsFlexibleSearch(""select {paragraph:pk}	from {DistLinkListComponent  as paragraph} where {paragraph:pk} in 	({{select {efs:target} from {ElementsForSlot as efs} where {efs:source} in 	({{SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }}) }}) }})"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"


#4 ----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""ContentSlot.csv"", true, 1, -1 );"
INSERT_UPDATE ContentSlot;$contentCV[unique=true];uid[unique=true];name;active;cmsComponents(uid,$contentCV)
"#% impex.exportItemsFlexibleSearch(""SELECT {slot:pk} from {ContentSlot as slot} where {slot:pk} in ({{SELECT {slotfp:contentSlot} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")  }})"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"


#5 ----------------------------------------------------------------------------------------------------
"#% impex.setTargetFile( ""ContentSlotForPage.csv"", true, 1, -1 );"
INSERT_UPDATE ContentSlotForPage;$contentCV[unique=true];uid[unique=true];position[unique=true];page(uid,$contentCV)[unique=true];contentSlot(uid,$contentCV)[unique=true]
"#% impex.exportItemsFlexibleSearch(""SELECT {slotfp:pk} FROM {ContentSlotForPage as slotfp join CatalogVersion as cv on {slotfp:catalogVersion} = {cv:pk} join Catalog as c on {cv:catalog} = {c:pk} join ContentPage as page on {slotfp:page} = {page:pk}} WHERE {c:id} = '"" + catalogVersion + ""' and {cv:version} = 'Staged' AND {page:uid} IN ("" + pages + "")"", Collections.EMPTY_MAP, Collections.singletonList(Item.class), true, true, -1, -1);"