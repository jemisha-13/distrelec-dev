<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:cxf="http://cxf.apache.org/core"
	xmlns:cxf-beans="http://cxf.apache.org/configuration/beans"
	xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
		http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
		http://cxf.apache.org/configuration/beans http://cxf.apache.org/schemas/configuration/cxf-beans.xsd
        http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd">

	<!-- Set timeout of WebService client -->
	<http-conf:conduit name=".*/XISOAPAdapter/MessageServlet.*">
		<http-conf:client ReceiveTimeout="${distrelec.webservice.timeout}" />
	</http-conf:conduit>
	
	
	<!-- Accessing the SAP PI system from local development environment works only if you start an ssh tunnel as described in /environment/soapUI/_readme.txt . -->
	<!-- wsdlLocation="http://daechs062u.dae.datwyler.biz:50000/dir/wsdl?p=ic/b3f95196b2a83b3bb8f4e2ebc1600cda" -->
	<alias name="core.sapPiWebserviceClient" alias="sapPiWebserviceClient"/>
	<jaxws:client id="core.sapPiWebserviceClient" 
		serviceClass="com.distrelec.webservice.sap.v1.SIHybrisV1Out" 
		address="${core.sapPi.webservice.address}/XISOAPAdapter/MessageServlet?senderParty=&amp;senderService=${core.sapPi.webservice.senderService}&amp;receiverParty=&amp;receiverService=&amp;interface=SI_Hybris_v1_out&amp;interfaceNamespace=http%3A%2F%2Fwww.distrelec.com%2Fhybris"
		username="${core.sapPi.webservice.username}"
		password="${core.sapPi.webservice.password}">
		<jaxws:properties>
			<entry key="schema-validation-enabled" value="${core.sapPi.webservice.enableSchemaValidation}" />
		</jaxws:properties>
		
		<jaxws:inInterceptors>
			<ref bean="logInbound"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<ref bean="logOutbound"/>
		</jaxws:outInterceptors>	
	</jaxws:client>
	
</beans>
