<?xml version="1.0" encoding="UTF-8"?>
<!-- [y] hybris Platform Copyright (c) 2000-2012 hybris AG All rights reserved. This software is the confidential and proprietary information of hybris ("Confidential 
	Information"). You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the license agreement you entered into 
	with hybris. -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<alias alias="catplusCodeGenerator" name="defaultCatplusCodeGenerator" />
	<bean id="defaultCatplusCodeGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator" init-method="init">
		<property name="key" value="CATALOGPLUS" />
		<property name="digits" value="8" />
		<property name="start" value="90000000" />
		<property name="numeric" value="true" />
	</bean>
	
	<bean id="catplusImportBaseDirectory" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/distrelec/catplus" />
	</bean>

	<bean id="catplusImportProcessingDirectory" class="java.lang.String">
		<constructor-arg value="#{catplusImportBaseDirectory}/processing" />
	</bean>
	
	<!-- Impex Import -->
	<!-- Composite Filter for CSV File processing -->
	<bean id="catalogPlusFileNameStep1" class="java.lang.String">
		<constructor-arg value="(catplus_product-ALL_MANUFACTURERS_[A-Z]{2}-[0-9]{17})(\.csv)" />
	</bean>
	
	<bean id="catplusCsvCompositeFilter" class="com.namics.distrelec.b2b.core.inout.spring.integration.DistCompositeFileListFilter">
		<constructor-arg>
			<list>
				<bean class="org.springframework.integration.file.filters.RegexPatternFileListFilter">
					<!-- <constructor-arg value="(.*)\.csv" /> -->
					<!-- <constructor-arg value="catplus_product-ALL_MANUFACTURERS_DE-20140925165700000.csv"/> -->
					<constructor-arg value="#{catalogPlusFileNameStep1}"/>
				</bean>
				<bean class="com.namics.distrelec.b2b.core.inout.spring.integration.DistEndFileFilter" />
				<bean class="org.springframework.integration.file.filters.AcceptOnceFileListFilter" />
			</list>
		</constructor-arg>
	</bean>

	<!-- 1) Read first the csv file -->
	<file:inbound-channel-adapter id="catplusCsvFiles" directory="#{catplusImportBaseDirectory}" filter="catplusCsvCompositeFilter">
		<int:poller fixed-rate="5000" />
	</file:inbound-channel-adapter>
	
	<!-- 2a) move the file to processing and create header -->
	<file:outbound-gateway request-channel="catplusCsvFiles" reply-channel="catplusCsvFilesProc" directory="#{catplusImportProcessingDirectory}"
		delete-source-files="true" />
	<int:service-activator input-channel="catplusCsvFilesProc" output-channel="catplusBatchFilesHeaderInit" ref="catplusHeaderSetupTask" method="execute" />
	<bean id="catplusHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<property name="catalog" value="distrelecCatalogPlusProductCatalog" />
		<property name="net" value="false" />
		<property name="storeBaseDirectory" ref="catplusImportBaseDirectory" />
	</bean>
	
	<!-- 2b) move the file to processing and setup header, partly site dependent -->
	<int:service-activator input-channel="catplusBatchFilesHeaderInit" output-channel="catplusBatchFilesHeader" ref="headerInitTask" method="execute" />

	<!-- 3) transform csv to impex file(s) -->
	<!-- The impex file names that will be trasformed are stored into the BatchHeader object -->
	<int:service-activator input-channel="catplusBatchFilesHeader" output-channel="catPlusBatchFilesTran" ref="catplusBatchTransformerTask" method="execute" />
	<!-- initConvertersMap will lookup all the converters bean and later on they are filtered by p:mapping name. -->
	<bean id="catplusBatchTransformerTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.ImpexTransformerTask" init-method="initConvertersMap">
		<property name="fieldSeparator" value=";" />
		<!-- use the 'ISO-8859-1' encoding instead of 'UTF-8' to be able to process special char like: ÃŸ -->
		<property name="encoding" value="ISO-8859-1" />
		<property name="linesToSkip" value="1"/>
		<property name="cleanupHelper" ref="distCatPlusCsvCleanupHelper" />
	</bean>
	<bean id="distCatPlusCsvCleanupHelper" class="com.namics.distrelec.b2b.core.dataimport.batch.task.DistCleanupHelper">
		<property name="timeStampFormat" value="yyyyMMddHHmmssSSS" />
		<property name="cleanupTransformedFiles" value="true" />
		<property name="finalArchive" value="true" />
	</bean>
	
	<bean id="catplusImpexImportHeader" class="java.lang.String">
		<constructor-arg>
			<value>
				#-------------------------------------------------------------------------------
				# GERMAN is set as default locale for ImpEx. Then, the decimal separator would be a comma!
				# Set locale to ch_DE. Hence, the usual number format can be used. e.g. 7.2
				#-------------------------------------------------------------------------------
				#% impex.setLocale(new Locale("de","CH"));
				
				## general settings macros
				$language=$LANGUAGE$
				$defaultLanguage=de
				$net=$NET$							
				
				# catalogs macros
				# $productCatalog=$CATALOG$
				
				### Classification macros
				#$classificationSystem=DistrelecClassification
				#$classificatonSystemVersion=1.0
				$clAttrModifiers=system='DistrelecClassification',version='1.0',translator=de.hybris.platform.catalog.jalo.classification.impex.ClassificationAttributeTranslator,lang=$defaultLanguage
				
				
				$catalogPlusProductCatalog=distrelecCatalogPlusProductCatalog
				$catalogVersion=catalogversion(catalog(id[default=$catalogPlusProductCatalog]),version[default='Online'])
								
				### exchange rate
				$eur2chf=1.2314 
				$eur2ltl=3.45 
								
				### sales organizations.				
				$disCH=7310
				$disAT=7320
				$disIT=7330

				### salesorg not included for catplus
				$prodAG=7340
				$disDE=7350
				$newCo=7370
				$elfaSE=7640
				$elfaNOR=7650
				$elfaPL=7660
				$elfaFI=7670
				$elfaDK=7680
				$elfaLV=7700
				## $elfaLT=7710
				$elfaLT=7820
				$elfaEE=7790
				$elfaNL=7800	
				
				### Media macros
				$media=@media[translator=de.hybris.platform.impex.jalo.media.MediaDataTranslator]
				$mediaCatPlus=@media[translator=com.namics.distrelec.b2b.core.inout.catplus.impex.translator.DistCatPlusMediaDataTranslator]
				$mediaResource=http:/Web/WebShopImages/catplus/
				
								
				### Classification Attributes Definition				
				## classification attributes for commodity codes.
				## for catalog plus the codes of each class are common for all the products 
				$eclass40=@eclass40[$clAttrModifiers];
				$eclass41=@eclass41[$clAttrModifiers];
				$eclass50=@eclass50[$clAttrModifiers];
				$eclass51=@eclass51[$clAttrModifiers];
				$eclass60=@eclass60[$clAttrModifiers];
				$eclass70=@eclass70[$clAttrModifiers];
				$esn=@esn[$clAttrModifiers];
				$unspsc3=@unspsc3[$clAttrModifiers];
				$unspsc5=@unspsc5[$clAttrModifiers];
				$unspsc8=@unspsc8[$clAttrModifiers];
				$unspsc11=@unspsc11[$clAttrModifiers];
				$unspsc13=@unspsc13[$clAttrModifiers];
				$unspsc13_1=@unspsc13_1[$clAttrModifiers];
				$jAndj=@jAndj[$clAttrModifiers];
				$unspsc_Unilever=@unspsc_Unilever[$clAttrModifiers];	
				$unspsc70901=@unspsc70901[$clAttrModifiers];
				##NOT PRESENT IN TEST SYSTEM #$unspsc15=@unspsc15[$clAttrModifiers];
																				
			</value>
		</constructor-arg>
	</bean>
	
	<!-- 4: Import Product -->
	<bean id="catplusProductPriceConverter" class="com.namics.distrelec.b2b.core.dataimport.batch.converter.impl.DefaultDistImpexConverter">
		<property name="header">
			<value>#{catplusImpexImportHeader}
				$prices=Europe1prices[cellDecorator=com.namics.distrelec.b2b.core.inout.catplus.impex.decorator.DistCheckPriceCellDecorator,translator=com.namics.distrelec.b2b.core.inout.erp.impex.SAPEurope1PricesTranslator][mode=append][dateformat=yyyyMMdd]
				# Update Prices. The same price will be imported for all sales organizations with specific currency
				INSERT_UPDATE Product;code[cellDecorator=com.namics.distrelec.b2b.core.inout.catplus.impex.decorator.DistGenerateCodeCellDecorator];catPlusSupplierAID[unique=true];catPlusSupplierShortName;description[lang=de];description[lang=en];description[lang=it];name[lang=de];name[lang=en];name[lang=it];summary[lang=de];summary[lang=en];summary[lang=it];ean;supplierAlternativeAID;unit(code);showUsedLabel;approvalStatus(code);manufacturerAID;manufacturerName;manufacturerTypeDescription;minOrderQuantity;orderQuantityInterval;$prices;supercategories(code)[default=class-root];$eclass40;$eclass41;$eclass50;$eclass51;$eclass60;$eclass70;$esn;$unspsc3;$unspsc5;$unspsc8;$unspsc11;$unspsc13;$unspsc13_1;$jAndj;$unspsc70901;$unspsc_Unilever;$mediaCatPlus;$catalogVersion				
			</value>
		</property>
		<property name="impexRow">
			<value>								
				;;{+1};{+0};"{2}";"{2}";"{2}";"{3}";"{3}";"{3}";"{3}";"{3}";"{3}";{23};;PC;true;approved;{4};{5};;{10};{11};;;272608XX;27260801;27260801;27260801;27269090;27269090;MFB;32111511;32101619;32111500;32111511;32111511;32101619;81101605;32111500;32100000;$mediaResource(_){14}(,){15}(|){16}(,){17}(|){18}(,){19};
			</value>
		</property>
		<property name="type" value="Product" />
	</bean>
		
	<!-- Here the Converter Mappings -->
	<bean id="catplusProductPriceConverterMapping" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		 p:mapping="catplus_product" p:converter-ref="catplusProductPriceConverter" />
	
	<!-- 4) import the impex(ex) -->
	<!-- The impex file names that have been trasformed are stored into the BatchHeader object -->
	<int:service-activator input-channel="catPlusBatchFilesTran" output-channel="catPlusStep2" ref="catPlusBatchRunnerTask" method="execute" />
	<bean id="catPlusBatchRunnerTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.AbstractImpexRunnerTask">
		<lookup-method name="getImportService" bean="importService" />
		<lookup-method name="getImportConfig" bean="catPlusImportConfig" />
	</bean>
	<!-- Define the impex worker configuration to avoid problems when importing media files -->
	<bean id="catPlusImportConfig" class="de.hybris.platform.servicelayer.impex.ImportConfig" scope="prototype">
		<property name="removeOnSuccess" value="true" />
		<property name="failOnError" value="false" />
		<property name="synchronous" value="true" />
		<property name="maxThreads" value="#{configurationService.configuration.getProperty('import.catplus.batch.impex.max-threads')}" />
		<property name="locale" value="en"/>
	</bean>

	<bean id="distCatPlusCsvStep2CleanupHelper" class="com.namics.distrelec.b2b.core.dataimport.batch.task.DistCleanupHelper">
		<property name="timeStampFormat" value="yyyyMMddHHmmssSSS" />
		<property name="cleanupTransformedFiles" value="true" />
		<property name="finalArchive" value="false" />
		<property name="destinationFolder" value="#{catplusImportBaseDirectory}" />
		<property name="searchFileNamePattern" value="#{catalogPlusFileNameStep1}" />
		<property name="renameFileNamePattern" value="step2_$1$2" />
	</bean>

	<int:service-activator input-channel="catPlusStep2" ref="catplusStep2CleanupTask" method="execute" />
	<bean id="catplusStep2CleanupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.CleanupTask">
		<property name="cleanupHelper" ref="distCatPlusCsvStep2CleanupHelper" />
	</bean>

</beans>
